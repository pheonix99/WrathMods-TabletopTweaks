using Kingmaker.Blueprints;
using Kingmaker.Blueprints.Classes;
using Kingmaker.Blueprints.Classes.Selection;
using Kingmaker.UnitLogic.Abilities.Blueprints;
using Kingmaker.UnitLogic.Abilities.Components;
using Kingmaker.UnitLogic.FactLogic;
using TabletopTweaks.Config;
using TabletopTweaks.Extensions;
using TabletopTweaks.NewComponents.AbilitySpecific;
using TabletopTweaks.Utilities;

namespace TabletopTweaks.NewContent.ArcanistExploits {
    static class QuickStudy {
        public static void AddQuickStudy() {
            //Used Assets
            //var ItemBondAbility = Resources.GetBlueprint<BlueprintAbility>("e5dcf71e02e08fc448d9745653845df1");
            var ArcanistArcaneReservoirResource = Resources.GetBlueprint<BlueprintAbilityResource>("cac948cbbe79b55459459dd6a8fe44ce");
            var ArcanistExploitSelection = Resources.GetBlueprint<BlueprintFeatureSelection>("b8bf3d5023f2d8c428fdf6438cecaea7");
            var ArcanistClass = Resources.GetBlueprint<BlueprintCharacterClass>("52dbfd8505e22f84fad8d702611f60b7");
            var WizardClass = Resources.GetBlueprint<BlueprintCharacterClass>("ba34257984f4c41408ce1dc2004e342e");
            var ExploiterWizardArchetype = Resources.GetBlueprint<BlueprintArchetype>("6d2027b4eec590c41adb5caeb7bb026d");
            var icon = AssetLoader.LoadInternal("Abilities", "Icon_QuickStudy.png");

            var ArcanistExploitQuickStudyAbility = Helpers.CreateBlueprint<BlueprintAbility>("ArcanistExploitQuickStudyAbility", bp => {
                bp.SetName("Quick Study");
                bp.SetDescription("The arcanist can prepare a spell in place of an existing spell by expending 1 point from her "
                    + "arcane reservoir. Using this ability is a full-round action that provokes an attack of opportunity. "
                    + "The spell prepared must be of the same level as the spell being replaced.");
                bp.m_Icon = icon;
                bp.ShowNameForVariant = true;
                bp.LocalizedDuration = new Kingmaker.Localization.LocalizedString();
                bp.LocalizedSavingThrow = new Kingmaker.Localization.LocalizedString();
                bp.Range = AbilityRange.Personal;
                bp.CanTargetSelf = true;
                bp.Hidden = true;
                bp.Type = AbilityType.Supernatural;
                bp.Animation = Kingmaker.Visual.Animation.Kingmaker.Actions.UnitAnimationActionCastSpell.CastAnimationStyle.Omni;
                bp.ActionType = Kingmaker.UnitLogic.Commands.Base.UnitCommand.CommandType.Standard;
                bp.m_IsFullRoundAction = true;
                //bp.m_Icon = ItemBondAbility.m_Icon;
                //bp.ResourceAssetIds = ItemBondAbility.ResourceAssetIds;
                bp.AddComponent(Helpers.Create<AbilityResourceLogic>(c => {
                    c.m_RequiredResource = ArcanistArcaneReservoirResource.ToReference<BlueprintAbilityResourceReference>();
                    c.m_IsSpendResource = true;
                    c.Amount = 1;
                }));
                bp.AddComponent(Helpers.Create<QuickStudyComponent>(c => {
                    c.AnySpellLevel = true;
                    c.CharacterClass = new BlueprintCharacterClassReference[] {
                        ArcanistClass.ToReference<BlueprintCharacterClassReference>(),
                        WizardClass.ToReference<BlueprintCharacterClassReference>()
                    };
                    c.Archetypes = new BlueprintArchetypeReference[] {
                        ExploiterWizardArchetype.ToReference<BlueprintArchetypeReference>()
                    };
                }));
            });
            var ArcanistExploitQuickStudy = Helpers.CreateBlueprint<BlueprintFeature>("ArcanistExploitQuickStudy", bp => {
                bp.SetName(ArcanistExploitQuickStudyAbility.Name);
                bp.SetDescription(ArcanistExploitQuickStudyAbility.Description);
                bp.m_Icon = icon;
                bp.Groups = new FeatureGroup[] { FeatureGroup.ArcanistExploit };
                bp.IsClassFeature = true;
                bp.Ranks = 1;
                bp.AddComponent(Helpers.Create<AddFacts>(c => {
                    c.m_Facts = new BlueprintUnitFactReference[] {
                        ArcanistExploitQuickStudyAbility.ToReference<BlueprintUnitFactReference>(),
                    };
                }));

            });
            if (ModSettings.AddedContent.ArcanistExploits.IsDisabled("QuickStudy")) { return; }
            FeatTools.AddAsArcanistExploit(ArcanistExploitQuickStudy);
        }
    }
}
